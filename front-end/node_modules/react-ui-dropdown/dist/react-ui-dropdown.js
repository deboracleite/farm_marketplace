(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["react"], factory);
	else if(typeof exports === 'object')
		exports["ReactUIDropdown"] = factory(require("react"));
	else
		root["ReactUIDropdown"] = factory(root["react"]);
})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _ReactUIDropdown = __webpack_require__(6);

	var _ReactUIDropdown2 = _interopRequireDefault(_ReactUIDropdown);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _ReactUIDropdown2.default;

/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = require("react");

/***/ },
/* 2 */
/***/ function(module, exports) {

	var replace = function (map) {
	    return function (str) {
	        return str.split('').map(function (i) {
	            return map[i] || i;
	        }).join('');
	    };
	};

	module.exports = function (map) {
	    var reverse = { };
	    var full    = { };

	    for ( var key in map ) {
	        var value = map[key];
	        full[key] = value;
	        reverse[value] = key;

	        var upper = key.toUpperCase();
	        if ( upper !== key ) {
	            full[upper] = value.toUpperCase();
	            reverse[full[upper]] = upper;
	        }
	    }

	    return { fromEn: replace(full), toEn: replace(reverse) };
	};


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Item = (function (_Component) {
	  _inherits(Item, _Component);

	  function Item(props) {
	    _classCallCheck(this, Item);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Item).call(this, props));

	    _this.state = {
	      focused: false
	    };
	    return _this;
	  }

	  _createClass(Item, [{
	    key: "getId",
	    value: function getId() {
	      return this.props.idPrefix + "item-" + this.props.id;
	    }
	  }, {
	    key: "getClassName",
	    value: function getClassName() {
	      return "dropdown-item" + (this.state.focused ? " selected" : "");
	    }
	  }, {
	    key: "hasImages",
	    value: function hasImages() {
	      return this.props.showImages && !!this.props.image;
	    }
	  }, {
	    key: "hasSubtitle",
	    value: function hasSubtitle() {
	      return !!this.props.subtitle;
	    }
	  }, {
	    key: "setFocused",
	    value: function setFocused(value) {
	      this.setState({
	        focused: !!value
	      });
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      return _react2.default.createElement(
	        "div",
	        {
	          className: this.getClassName(),
	          id: this.getId(),
	          hidden: this.props.selected,
	          style: this.props.selected ? { display: "none" } : {},
	          role: "option",
	          tabIndex: "-1",
	          onMouseDown: this.props.onClick,
	          onMouseMove: this.props.onHover },
	        this.hasImages() && _react2.default.createElement("img", {
	          className: "dropdown-item-image",
	          src: this.props.image,
	          alt: "" }),
	        _react2.default.createElement(
	          "div",
	          { className: "dropdown-item-title" },
	          this.props.title,
	          this.hasSubtitle() && _react2.default.createElement(
	            "div",
	            { className: "dropdown-item-subtitle" },
	            this.props.subTitle
	          )
	        )
	      );
	    }
	  }]);

	  return Item;
	})(_react.Component);

	exports.default = Item;

	Item.propTypes = {
	  idPrefix: _react.PropTypes.string.isRequired,
	  id: _react.PropTypes.number.isRequired,
	  selected: _react.PropTypes.bool,
	  image: _react.PropTypes.string,
	  title: _react.PropTypes.string.isRequired,
	  subTitle: _react.PropTypes.string,
	  showImages: _react.PropTypes.bool,
	  onClick: _react.PropTypes.func.isRequired,
	  onHover: _react.PropTypes.func.isRequired
	};
	Item.defaultProps = {
	  selected: false,
	  showImages: true
	};

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Items = (function (_Component) {
	  _inherits(Items, _Component);

	  function Items(props) {
	    _classCallCheck(this, Items);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Items).call(this, props));

	    _this.state = {
	      hidden: true
	    };
	    return _this;
	  }

	  _createClass(Items, [{
	    key: "getId",
	    value: function getId() {
	      return this.props.idPrefix + "items";
	    }
	  }, {
	    key: "getFocusedItemId",
	    value: function getFocusedItemId() {
	      return this.props.focusedItem ? this.props.idPrefix + "item-" + this.props.focusedItem : "";
	    }
	  }, {
	    key: "setHidden",
	    value: function setHidden(value) {
	      this.setState({
	        hidden: !!value
	      });
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      return _react2.default.createElement(
	        "div",
	        {
	          className: "dropdown-items",
	          id: this.getId(),
	          hidden: this.state.hidden,
	          style: this.state.hidden ? { display: "none" } : {},
	          role: "listbox",
	          tabIndex: "-1",
	          "aria-activedescendant": this.getFocusedItemId() },
	        this.props.children
	      );
	    }
	  }]);

	  return Items;
	})(_react.Component);

	exports.default = Items;

	Items.propTypes = {
	  idPrefix: _react.PropTypes.string.isRequired,
	  focusedItem: _react.PropTypes.oneOfType([_react2.default.PropTypes.number, _react2.default.PropTypes.string])
	};

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var Label = (function (_Component) {
	  _inherits(Label, _Component);

	  function Label() {
	    _classCallCheck(this, Label);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(Label).apply(this, arguments));
	  }

	  _createClass(Label, [{
	    key: "getId",
	    value: function getId() {
	      return this.props.idPrefix + "label";
	    }
	  }, {
	    key: "getInputId",
	    value: function getInputId() {
	      return this.props.idPrefix + "search-input";
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      return _react2.default.createElement(
	        "label",
	        {
	          className: "dropdown-label",
	          id: this.getId(),
	          htmlFor: this.getInputId() },
	        this.props.children
	      );
	    }
	  }]);

	  return Label;
	})(_react.Component);

	exports.default = Label;

	Label.propTypes = {
	  idPrefix: _react.PropTypes.string.isRequired
	};

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	__webpack_require__(12);

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	var _Items = __webpack_require__(4);

	var _Items2 = _interopRequireDefault(_Items);

	var _Item = __webpack_require__(3);

	var _Item2 = _interopRequireDefault(_Item);

	var _Label = __webpack_require__(5);

	var _Label2 = _interopRequireDefault(_Label);

	var _SearchInput = __webpack_require__(7);

	var _SearchInput2 = _interopRequireDefault(_SearchInput);

	var _SelectedItem = __webpack_require__(8);

	var _SelectedItem2 = _interopRequireDefault(_SelectedItem);

	var _itemChecker = __webpack_require__(9);

	var _itemChecker2 = _interopRequireDefault(_itemChecker);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * Variable for store count of components in the scope.
	 *
	 * @type {Number}
	 */
	var idCounter = 0;

	/**
	 * Return unique id for component. Useful for id in HTML.
	 *
	 * @param {String} prefix
	 * @returns {String}
	 */
	function uniqueId(prefix) {
	  var id = ++idCounter;

	  return prefix + id;
	}

	/**
	 * Returns a function, that, as long as it continues to be invoked, will not be triggered.
	 * The function will be called after it stops being called for N milliseconds.
	 *
	 * Code taken from article {@link https://davidwalsh.name/javascript-debounce-function|JavaScript Debounce Function}.
	 *
	 * @param {Function} func - Function which will need to call
	 * @param {Number} wait - Milliseconds after func will be called
	 * @returns {Function}
	 */
	function debounce(func, wait) {
	  var timeout = undefined;
	  return function () {
	    var context = this,
	        args = arguments;
	    var later = function later() {
	      timeout = null;
	      func.apply(context, args);
	    };
	    var callNow = !timeout;
	    clearTimeout(timeout);
	    timeout = setTimeout(later, wait);
	    if (callNow) func.apply(context, args);
	  };
	}

	var ReactUIDropdown = (function (_Component) {
	  _inherits(ReactUIDropdown, _Component);

	  function ReactUIDropdown(props) {
	    _classCallCheck(this, ReactUIDropdown);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ReactUIDropdown).call(this, props));

	    var items = _this.transformArrayToItems(props.initialItems, props.maxDisplayedItems);

	    _this.state = {
	      dropdownId: uniqueId("dropdown-") + "-",
	      items: items,
	      focusedItem: items.keys.displayed[0] || null,
	      searchValue: ""
	    };

	    _this.sendRequest = debounce(_this.sendRequest, 500);
	    return _this;
	  }

	  _createClass(ReactUIDropdown, [{
	    key: "componentWillUpdate",
	    value: function componentWillUpdate(nextProps, nextState) {
	      if (this.state.focusedItem != nextState.focusedItem) {
	        var item = this.refs["item-" + this.state.focusedItem];
	        if (item) item.setFocused(false);
	      }
	    }
	  }, {
	    key: "componentDidUpdate",
	    value: function componentDidUpdate(prevProps, prevState) {
	      if (prevState.focusedItem != this.state.focusedItem) {
	        var item = this.refs["item-" + this.state.focusedItem];
	        if (item) item.setFocused(true);
	      }
	    }

	    /**
	     * Return keys of displayed items from state, which not selected.
	     *
	     * @returns {Array}
	     */

	  }, {
	    key: "getNotSelectedItems",
	    value: function getNotSelectedItems() {
	      var _this2 = this;

	      return this.state.items.keys.displayed.filter(function (itemKey) {
	        return ! ~_this2.state.items.keys.selected.indexOf(itemKey);
	      });
	    }

	    /**
	     * Has component a source or not.
	     *
	     * @returns {boolean}
	     */

	  }, {
	    key: "hasRemoteSearch",
	    value: function hasRemoteSearch() {
	      return !!(this.props.remoteSearch && this.props.remoteSearch.url);
	    }
	  }, {
	    key: "handleSelectorClick",
	    value: function handleSelectorClick() {
	      this.refs.searchInput.refs.input.focus();
	    }
	  }, {
	    key: "handleSearchInputChange",
	    value: function handleSearchInputChange(e) {
	      var _this3 = this;

	      var searchValue = e.target.value;

	      this.setState({
	        searchValue: searchValue
	      });

	      var updateState = function updateState(displayedItemsKeys) {
	        var items = _this3.state.items;
	        items.keys.displayed = displayedItemsKeys;

	        _this3.setState({
	          items: items,
	          focusedItem: items.keys.displayed.filter(function (itemKey) {
	            return ! ~items.keys.selected.indexOf(itemKey);
	          })[0] || null
	        });
	      };

	      if (!searchValue.length) {
	        updateState(this.state.items.keys.started);
	        return;
	      }

	      this.goSearch(searchValue, function (foundItemsKeys) {
	        updateState(foundItemsKeys.slice(0, _this3.props.maxDisplayedItems));
	      });
	    }
	  }, {
	    key: "handleSearchInputKeyDown",
	    value: function handleSearchInputKeyDown(e) {
	      var _this4 = this;

	      var focusedItem = this.state.focusedItem;
	      var displayedItems = this.getNotSelectedItems();
	      var focusedItemIndex = displayedItems.indexOf(focusedItem);
	      var updateState = function updateState(focusedItemIndex) {
	        _this4.setState({
	          focusedItem: displayedItems[focusedItemIndex] || null
	        });
	      };

	      switch (e.key) {
	        case "ArrowDown":
	          updateState(focusedItemIndex < displayedItems.length - 1 ? focusedItemIndex + 1 : 0);
	          break;
	        case "ArrowUp":
	          updateState(focusedItemIndex == 0 ? displayedItems.length - 1 : focusedItemIndex - 1);
	          break;
	        case "Enter":
	          this.addItemToSelected(focusedItem);

	          updateState(focusedItemIndex < displayedItems.length - 1 ? focusedItemIndex + 1 : focusedItemIndex - 1);
	          break;
	      }
	    }
	  }, {
	    key: "handleSearchInputFocus",
	    value: function handleSearchInputFocus() {
	      this.refs.items.setHidden(false);
	      this.setState({
	        focusedItem: this.getNotSelectedItems()[0] || null
	      });
	      var item = this.refs["item-" + this.state.focusedItem];
	      if (item) item.setFocused(true);
	    }
	  }, {
	    key: "handleSearchInputBlur",
	    value: function handleSearchInputBlur() {
	      this.refs.items.setHidden(true);
	      var item = this.refs["item-" + this.state.focusedItem];
	      if (item) item.setFocused(false);
	    }
	  }, {
	    key: "handleSelectedItemClick",
	    value: function handleSelectedItemClick(itemKey) {
	      this.removeItemFromSelected(itemKey);
	    }
	  }, {
	    key: "handleItemClick",
	    value: function handleItemClick(itemKey) {
	      this.addItemToSelected(itemKey);
	    }
	  }, {
	    key: "handleItemHover",
	    value: function handleItemHover(itemKey) {
	      if (this.state.focusedItem == itemKey) return;
	      this.setState({
	        focusedItem: itemKey
	      });
	    }
	  }, {
	    key: "dropdownChange",
	    value: function dropdownChange() {
	      var _this5 = this;

	      if (!this.props.onChange) return;

	      this.props.onChange(this.state.items.keys.selected.reduce(function (selectedItems, itemKey) {
	        selectedItems.push(_this5.state.items.collection[itemKey]);
	        return selectedItems;
	      }, []));
	    }

	    /**
	     * Transform array of data for suitable collection of items.
	     *
	     * @param {Array} data
	     * @returns {{collection: {}, keys: {all: Array, started: Array, displayed: Array, selected: Array}}}
	     */

	  }, {
	    key: "transformArrayToItems",
	    value: function transformArrayToItems(data, maxDisplayedItems) {
	      maxDisplayedItems = maxDisplayedItems || this.props.maxDisplayedItems;

	      var items = {
	        collection: {},
	        keys: {
	          all: [],
	          started: [],
	          displayed: [],
	          selected: []
	        }
	      };

	      if (data && data.length) {
	        items.keys.all = data.map(function (item) {
	          return item.id;
	        });
	        var startedItems = items.keys.all.slice(0, maxDisplayedItems);
	        items.keys.started = startedItems;
	        items.keys.displayed = startedItems;
	        items.collection = data.reduce(function (obj, item) {
	          obj[item.id] = item;
	          return obj;
	        }, {});
	      }

	      return items;
	    }

	    /**
	     * Function create an ajax GET request to url and give response in callback.
	     *
	     * @param {string} url
	     * @param {Function} callback
	     */

	  }, {
	    key: "sendRequest",
	    value: function sendRequest(url, callback) {
	      var xhr = undefined;
	      try {
	        xhr = new ActiveXObject("Msxml2.XMLHTTP");
	      } catch (e) {
	        try {
	          xhr = new ActiveXObject("Microsoft.XMLHTTP");
	        } catch (E) {
	          xhr = false;
	        }
	      }
	      if (!xhr && typeof XMLHttpRequest != "undefined") {
	        xhr = new XMLHttpRequest();
	      }

	      xhr.open("GET", url, true);

	      xhr.onreadystatechange = function () {
	        if (xhr.readyState == 4) {
	          if (xhr.status == 200) {
	            callback(xhr);
	          }
	        }
	      };

	      xhr.send();
	    }

	    /**
	     * Search item, which contain string like q. Search in local and on server.
	     *
	     * @param {string} q
	     * @param {Function} callback
	     */

	  }, {
	    key: "goSearch",
	    value: function goSearch(q, callback) {
	      var _this6 = this;

	      if (!q.length) {
	        return;
	      }

	      var foundItemsKeys = [];
	      var fields = ["title"];

	      this.state.items.keys.all.forEach(function (itemKey) {
	        if (_itemChecker2.default.check(q, _this6.state.items.collection[itemKey], fields)) foundItemsKeys.push(itemKey);
	      });

	      if (!this.hasRemoteSearch()) {
	        callback(foundItemsKeys);
	        return;
	      }

	      this.sendRequest(this.props.remoteSearch.url + "?q=" + q + "&search_in=" + this.props.remoteSearch.fields, function (xhr) {
	        var response = JSON.parse(xhr.responseText);
	        var serverFoundItemsKeys = response.items.map(function (item) {
	          return item.id;
	        });

	        if (serverFoundItemsKeys.length) {
	          foundItemsKeys = foundItemsKeys.concat(serverFoundItemsKeys.filter(function (itemKey) {
	            return ! ~foundItemsKeys.indexOf(itemKey);
	          }));
	        }

	        callback(foundItemsKeys);
	      });
	    }

	    /**
	     * Add itemKey to array of selected items in state.
	     * If component is multiple, itemKey will be added to array, else will create array contained only one selected item.
	     *
	     * @param {number} itemKey
	     */

	  }, {
	    key: "addItemToSelected",
	    value: function addItemToSelected(itemKey) {
	      var items = this.state.items;
	      items.keys.selected = this.props.multiple ? this.state.items.keys.selected.concat(itemKey) : [itemKey];

	      this.setState({
	        items: items
	      });

	      this.dropdownChange();
	    }

	    /**
	     * Remove itemKey from array of selected items in state.
	     *
	     * @param {number} itemKey
	     */

	  }, {
	    key: "removeItemFromSelected",
	    value: function removeItemFromSelected(itemKey) {
	      var s = this.state.items.keys.selected;

	      s.splice(s.indexOf(itemKey), 1);

	      var items = this.state.items;
	      items.keys.selected = s;

	      this.setState({
	        items: items,
	        focusedItem: this.state.items.keys.displayed.filter(function (itemKey) {
	          return ! ~s.indexOf(itemKey);
	        })[0]
	      });

	      this.dropdownChange();
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      var _this7 = this;

	      var _state = this.state;
	      var dropdownId = _state.dropdownId;
	      var items = _state.items;

	      return _react2.default.createElement(
	        "div",
	        { className: "dropdown" },
	        _react2.default.createElement(
	          _Label2.default,
	          { idPrefix: dropdownId },
	          this.props.label
	        ),
	        _react2.default.createElement(
	          "div",
	          {
	            className: "dropdown-selector",
	            onClick: this.handleSelectorClick.bind(this) },
	          items.keys.selected.map(function (itemKey) {
	            return _react2.default.createElement(_SelectedItem2.default, _extends({
	              key: itemKey,
	              idPrefix: dropdownId
	            }, items.collection[itemKey], {
	              onClick: _this7.handleSelectedItemClick.bind(_this7, itemKey) }));
	          }),
	          _react2.default.createElement(_SearchInput2.default, {
	            ref: "searchInput",
	            idPrefix: dropdownId,
	            value: this.state.searchValue,
	            placeholder: this.props.placeholder,
	            onChange: this.handleSearchInputChange.bind(this),
	            onFocus: this.handleSearchInputFocus.bind(this),
	            onBlur: this.handleSearchInputBlur.bind(this),
	            onKeyDown: this.handleSearchInputKeyDown.bind(this) })
	        ),
	        _react2.default.createElement(
	          _Items2.default,
	          {
	            ref: "items",
	            idPrefix: dropdownId,
	            focusedItem: this.state.focusedItem },
	          items.keys.displayed.map(function (itemKey) {
	            return _react2.default.createElement(_Item2.default, _extends({
	              ref: "item-" + itemKey,
	              key: itemKey,
	              idPrefix: dropdownId
	            }, items.collection[itemKey], {
	              selected: !! ~items.keys.selected.indexOf(itemKey),
	              showImages: _this7.props.showImages,
	              onClick: _this7.handleItemClick.bind(_this7, itemKey),
	              onHover: _this7.handleItemHover.bind(_this7, itemKey) }));
	          })
	        )
	      );
	    }
	  }]);

	  return ReactUIDropdown;
	})(_react.Component);

	exports.default = ReactUIDropdown;

	ReactUIDropdown.propTypes = {
	  initialItems: _react.PropTypes.array.isRequired,
	  remoteSearch: _react.PropTypes.shape({
	    url: _react2.default.PropTypes.string,
	    fields: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.array, _react2.default.PropTypes.string])
	  }),
	  maxDisplayedItems: _react.PropTypes.number,
	  label: _react.PropTypes.string.isRequired,
	  placeholder: _react.PropTypes.string,
	  showImages: _react.PropTypes.bool,
	  multiple: _react.PropTypes.bool,
	  onChange: _react.PropTypes.func
	};
	ReactUIDropdown.defaultProps = {
	  maxDisplayedItems: 10,
	  showImages: true,
	  multiple: true
	};

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SearchInput = (function (_Component) {
	  _inherits(SearchInput, _Component);

	  function SearchInput() {
	    _classCallCheck(this, SearchInput);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(SearchInput).apply(this, arguments));
	  }

	  _createClass(SearchInput, [{
	    key: "getId",
	    value: function getId() {
	      return this.props.idPrefix + "search-input";
	    }
	  }, {
	    key: "getItemsId",
	    value: function getItemsId() {
	      return this.props.idPrefix + "items";
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      return _react2.default.createElement("input", {
	        ref: "input",
	        className: "dropdown-search-input",
	        id: this.getId(),
	        value: this.props.value,
	        placeholder: this.props.placeholder,
	        role: "combobox",
	        "aria-autocomplete": "list",
	        "aria-owns": this.getItemsId(),
	        onChange: this.props.onChange,
	        onFocus: this.props.onFocus,
	        onBlur: this.props.onBlur,
	        onKeyDown: this.props.onKeyDown });
	    }
	  }]);

	  return SearchInput;
	})(_react.Component);

	exports.default = SearchInput;

	SearchInput.propTypes = {
	  idPrefix: _react.PropTypes.string.isRequired,
	  value: _react.PropTypes.string,
	  placeholder: _react.PropTypes.string,
	  onChange: _react.PropTypes.func.isRequired,
	  onFocus: _react.PropTypes.func.isRequired,
	  onBlur: _react.PropTypes.func.isRequired,
	  onKeyDown: _react.PropTypes.func.isRequired
	};
	SearchInput.defaultProps = {
	  value: "",
	  placeholder: ""
	};

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(1);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SelectedItem = (function (_Component) {
	  _inherits(SelectedItem, _Component);

	  function SelectedItem() {
	    _classCallCheck(this, SelectedItem);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(SelectedItem).apply(this, arguments));
	  }

	  _createClass(SelectedItem, [{
	    key: "getId",
	    value: function getId() {
	      return this.props.idPrefix + "selected-item";
	    }
	  }, {
	    key: "render",
	    value: function render() {
	      return _react2.default.createElement(
	        "div",
	        { className: "dropdown-selected-item", id: this.getId() },
	        _react2.default.createElement(
	          "span",
	          { className: "dropdown-item-title" },
	          this.props.title
	        ),
	        _react2.default.createElement(
	          "button",
	          {
	            className: "dropdown-item-close",
	            type: "button",
	            onClick: this.props.onClick },
	          String.fromCharCode(215)
	        )
	      );
	    }
	  }]);

	  return SelectedItem;
	})(_react.Component);

	exports.default = SelectedItem;

	SelectedItem.propTypes = {
	  idPrefix: _react.PropTypes.string.isRequired,
	  title: _react.PropTypes.string.isRequired,
	  onClick: _react.PropTypes.func.isRequired
	};

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _wordConverter = __webpack_require__(10);

	var _wordConverter2 = _interopRequireDefault(_wordConverter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _typeof(obj) { return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj; }

	var currentWord = undefined;
	var currentWords = undefined;

	var itemChecker = {
	  check: function check(word, item) {
	    var fields = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];

	    if (!word || typeof word != "string") {
	      throw new Error("'word' parameter must be a string");
	    }
	    if (!item || (typeof item === "undefined" ? "undefined" : _typeof(item)) != "object") {
	      throw new Error("'item' parameter must be an object");
	    }

	    if (word != currentWord) {
	      currentWord = word;
	      currentWords = _wordConverter2.default.getConditionalWords(word).map(function (w) {
	        return w.replace(/(\[|\]|\(|\)|\\|\.|\^|\$|\||\?|\+)/g, "\\$1");
	      });
	    }

	    fields = typeof fields == "string" ? [fields] : fields || Object.keys(item);

	    for (var f = 0; f < fields.length; f++) {
	      if (typeof item[fields[f]] == "string") {
	        var value = item[fields[f]].toLowerCase();

	        for (var w = 0; w < currentWords.length; w++) {
	          if (~value.search(currentWords[w])) return true;
	        }
	      }
	    }

	    return false;
	  }
	};

	exports.default = itemChecker;

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _ru = __webpack_require__(11);

	var _ru2 = _interopRequireDefault(_ru);

	var _convert = __webpack_require__(2);

	var _convert2 = _interopRequireDefault(_convert);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function convertLayout(word) {
	  var converted = undefined;

	  converted = _ru2.default.fromEn(word);

	  if (converted != word) {
	    return converted;
	  }

	  converted = _ru2.default.toEn(word);

	  return converted;
	}

	function translit(word) {
	  var mapRUEN = {
	    "a": "а",
	    "b": "б",
	    "v": "в",
	    "g": "г",
	    "d": "д",
	    "e": "е",
	    "zh": "ж",
	    "z": "з",
	    "i": "и",
	    "j": "й",
	    "k": "к",
	    "l": "л",
	    "m": "м",
	    "n": "н",
	    "o": "о",
	    "p": "п",
	    "r": "р",
	    "s": "с",
	    "t": "т",
	    "u": "у",
	    "f": "ф",
	    "h": "х",
	    "kh": "х",
	    "c": "ц",
	    "ch": "ч",
	    "sh": "ш",
	    "shh": "щ",
	    "#": "ъ",
	    "y": "ы",
	    "'": "ь",
	    "je": "э",
	    "ju": "ю",
	    "ja": "я"
	  };

	  var translitRU = (0, _convert2.default)(mapRUEN);

	  var converted = undefined;

	  converted = translitRU.toEn(word);

	  if (converted != word) {
	    return converted;
	  }

	  converted = translitRU.fromEn(word);

	  return converted;
	}

	function getConditionalWords(word) {
	  var words = [];
	  words.push(word);

	  var converted = convertLayout(word);
	  words.push(converted);
	  converted = translit(converted);
	  words.push(converted);

	  converted = translit(word);
	  words.push(converted);
	  converted = convertLayout(converted);
	  words.push(converted);

	  return words.map(function (w) {
	    return w.toLowerCase();
	  });
	}

	exports.default = {
	  convertLayout: convertLayout,
	  translit: translit,
	  getConditionalWords: getConditionalWords
	};

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	var convert = __webpack_require__(2);

	var map = {
	    'q': 'й',
	    'w': 'ц',
	    'e': 'у',
	    'r': 'к',
	    't': 'е',
	    'y': 'н',
	    'u': 'г',
	    'i': 'ш',
	    'o': 'щ',
	    'p': 'з',
	    '[': 'х',
	    '{': 'Х',
	    ']': 'ъ',
	    '}': 'Ъ',
	    '|': '/',
	    '`': 'ё',
	    '~': 'Ё',
	    'a': 'ф',
	    's': 'ы',
	    'd': 'в',
	    'f': 'а',
	    'g': 'п',
	    'h': 'р',
	    'j': 'о',
	    'k': 'л',
	    'l': 'д',
	    ';': 'ж',
	    ':': 'Ж',
	    "'": 'э',
	    '"': 'Э',
	    'z': 'я',
	    'x': 'ч',
	    'c': 'с',
	    'v': 'м',
	    'b': 'и',
	    'n': 'т',
	    'm': 'ь',
	    ',': 'б',
	    '<': 'Б',
	    '.': 'ю',
	    '>': 'Ю',
	    '/': '.',
	    '?': ',',
	    '@': '"',
	    '#': '№',
	    '$': ';',
	    '^': ':',
	    '&': '?'
	};

	module.exports = convert(map);


/***/ },
/* 12 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ }
/******/ ])
});
;