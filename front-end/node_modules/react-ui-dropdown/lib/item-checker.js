"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _wordConverter = require("./word-converter");

var _wordConverter2 = _interopRequireDefault(_wordConverter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj; }

var currentWord = undefined;
var currentWords = undefined;

var itemChecker = {
  check: function check(word, item) {
    var fields = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];

    if (!word || typeof word != "string") {
      throw new Error("'word' parameter must be a string");
    }
    if (!item || (typeof item === "undefined" ? "undefined" : _typeof(item)) != "object") {
      throw new Error("'item' parameter must be an object");
    }

    if (word != currentWord) {
      currentWord = word;
      currentWords = _wordConverter2.default.getConditionalWords(word).map(function (w) {
        return w.replace(/(\[|\]|\(|\)|\\|\.|\^|\$|\||\?|\+)/g, "\\$1");
      });
    }

    fields = typeof fields == "string" ? [fields] : fields || Object.keys(item);

    for (var f = 0; f < fields.length; f++) {
      if (typeof item[fields[f]] == "string") {
        var value = item[fields[f]].toLowerCase();

        for (var w = 0; w < currentWords.length; w++) {
          if (~value.search(currentWords[w])) return true;
        }
      }
    }

    return false;
  }
};

exports.default = itemChecker;