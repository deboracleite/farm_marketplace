"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SearchInput = (function (_Component) {
  _inherits(SearchInput, _Component);

  function SearchInput() {
    _classCallCheck(this, SearchInput);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(SearchInput).apply(this, arguments));
  }

  _createClass(SearchInput, [{
    key: "getId",
    value: function getId() {
      return this.props.idPrefix + "search-input";
    }
  }, {
    key: "getItemsId",
    value: function getItemsId() {
      return this.props.idPrefix + "items";
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement("input", {
        ref: "input",
        className: "dropdown-search-input",
        id: this.getId(),
        value: this.props.value,
        placeholder: this.props.placeholder,
        role: "combobox",
        "aria-autocomplete": "list",
        "aria-owns": this.getItemsId(),
        onChange: this.props.onChange,
        onFocus: this.props.onFocus,
        onBlur: this.props.onBlur,
        onKeyDown: this.props.onKeyDown });
    }
  }]);

  return SearchInput;
})(_react.Component);

exports.default = SearchInput;

SearchInput.propTypes = {
  idPrefix: _react.PropTypes.string.isRequired,
  value: _react.PropTypes.string,
  placeholder: _react.PropTypes.string,
  onChange: _react.PropTypes.func.isRequired,
  onFocus: _react.PropTypes.func.isRequired,
  onBlur: _react.PropTypes.func.isRequired,
  onKeyDown: _react.PropTypes.func.isRequired
};
SearchInput.defaultProps = {
  value: "",
  placeholder: ""
};