"use strict";

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Items = (function (_Component) {
  _inherits(Items, _Component);

  function Items(props) {
    _classCallCheck(this, Items);

    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Items).call(this, props));

    _this.state = {
      hidden: true
    };
    return _this;
  }

  _createClass(Items, [{
    key: "getId",
    value: function getId() {
      return this.props.idPrefix + "items";
    }
  }, {
    key: "getFocusedItemId",
    value: function getFocusedItemId() {
      return this.props.focusedItem ? this.props.idPrefix + "item-" + this.props.focusedItem : "";
    }
  }, {
    key: "setHidden",
    value: function setHidden(value) {
      this.setState({
        hidden: !!value
      });
    }
  }, {
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        "div",
        {
          className: "dropdown-items",
          id: this.getId(),
          hidden: this.state.hidden,
          style: this.state.hidden ? { display: "none" } : {},
          role: "listbox",
          tabIndex: "-1",
          "aria-activedescendant": this.getFocusedItemId() },
        this.props.children
      );
    }
  }]);

  return Items;
})(_react.Component);

exports.default = Items;

Items.propTypes = {
  idPrefix: _react.PropTypes.string.isRequired,
  focusedItem: _react.PropTypes.oneOfType([_react2.default.PropTypes.number, _react2.default.PropTypes.string])
};