{"ast":null,"code":"var _jsxFileName = \"/Users/deboraleite/Documents/Conestoga/2_Term/Web_Technologies/Final project/farm_marketplace/front-end/src/Components/MyAccount.js\",\n  _s = $RefreshSig$();\nimport React, { Component } from 'react';\nimport { Container } from './MyAccountStyle';\n// import '../Styles/createAccount.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyAccount = () => {\n  _s();\n  const {\n    url,\n    user_id\n  } = useContext(AppContext);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [password, setPassword] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [message, setmMssage] = useState('');\n  const [selectedOption, setSelectedOption] = useState('');\n  const [selectedProvince, setSelectedProvince] = useState('');\n  useEffect(() => {\n    if (!sessionStorage.getItem(\"id\")) {\n      navigate('/');\n    }\n    fetch(url + 'getUserById.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        UserId: user_id\n      })\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      setFirstName(data.FirstName);\n      setLastName(data.LastName);\n      setEmail(data.Email);\n      setAddress(data.Address);\n      setCity(data.City);\n      setPassword(data.Password);\n      setPhoneNumber(data.PhoneNumber);\n      setSelectedOption(data.TypeAccount);\n      setSelectedProvince(data.Province);\n    }).catch(() => setmMssage('User not created'));\n  }, [user_id]);\n  const handleSubmit = event => {\n    event.preventDefault();\n    var that = this;\n    fetch(url + 'updateUser.php', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        UserId: user_id,\n        FirstName: firstName,\n        LastName: lastName,\n        Email: email,\n        Address: address,\n        City: city,\n        Password: password,\n        Province: selectedProvince,\n        PhoneNumber: phoneNumber,\n        TypeAccount: selectedOption\n      })\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      if (data.status) {\n        setmMssage(data.message);\n      } else {\n        setmMssage(data.message);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"myAccountForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelMyAccount\",\n        htmlFor: \"firstName\",\n        children: \"First Name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputMyAccount\",\n        type: \"text\",\n        name: \"firstName\",\n        placeholder: \"First Name\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelMyAccount\",\n        htmlFor: \"lastName\",\n        children: \"Last Name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputMyAccount\",\n        type: \"text\",\n        name: \"lastName\",\n        placeholder: \"Last Name\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelMyAccount\",\n        htmlFor: \"email\",\n        children: \"Email \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputMyAccount\",\n        type: \"text\",\n        name: \"email\",\n        placeholder: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelMyAccount\",\n        htmlFor: \"address\",\n        children: \"Address \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputMyAccount\",\n        type: \"text\",\n        name: \"address\",\n        placeholder: \"Address\",\n        value: address,\n        onChange: e => setAddress(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelMyAccount\",\n        htmlFor: \"city\",\n        children: \"City \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputMyAccount\",\n        type: \"text\",\n        name: \"city\",\n        placeholder: \"City\",\n        value: city,\n        onChange: e => setCity(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelMyAccount\",\n        htmlFor: \"city\",\n        children: \"Province \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputMyAccount\",\n        type: \"text\",\n        name: \"city\",\n        placeholder: \"City\",\n        value: selectedProvince,\n        onChange: e => selectedProvince(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 178\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelMyAccount\",\n        htmlFor: \"phoneNumber\",\n        children: \"Phone Number \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputMyAccount\",\n        type: \"text\",\n        name: \"phoneNumber\",\n        placeholder: \"Phone Number\",\n        value: phoneNumber,\n        onChange: e => setPhoneNumber(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelMyAccount\",\n        htmlFor: \"password\",\n        children: \"Password \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputMyAccount\",\n        type: \"text\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"labelMyAccount\",\n        htmlFor: \"accountType\",\n        children: \"Your account type \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputMyAccount\",\n        type: \"text\",\n        name: \"accountType\",\n        placeholder: \"account\",\n        value: selectedOption,\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(MyAccount, \"FejERSEMH0WrURVEQPN5NjoQ7Vs=\");\n_c = MyAccount;\nexport default MyAccount;\n\n// class MyAccount extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             id: sessionStorage.getItem(\"id\"),\n//             firstName: '',\n//             lastName:'',\n//             email: '',\n//             address:'',\n//             city:'',\n//             password: '',\n//             phoneNumber:'',\n//             message: '',\n//             selectedOption: ''\n//         }; \n//         this.onValueChange = this.onValueChange.bind(this);\n//     }\n\n//     componentDidMount() {\n//         this.getUser();\n//     }\n//     getUser(){\n//         var that = this;\n//         fetch('http://localhost:5000/www/getUserById.php', {\n//         // fetch('http://localhost/backend/getUserById.php', {\n//             method: 'POST',\n//             headers: {\n//             'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({\n//                 UserId: this.state.id\n//             }) \n//         })\n//         .then( (response) => {\n//             return response.json()\n//         }).then( (data) => {\n\n//             that.setState({\n//                 firstName: data.FirstName,\n//                 lastName: data.LastName,\n//                 email: data.Email,\n//                 address: data.Address,\n//                 city: data.City,\n//                 password: data.Password,\n//                 phoneNumber: data.PhoneNumber,\n//                 selectedOption: data.TypeAccount,\n//             })\n//         }).catch(() => this.setState({...that.state, message: 'User not created'}));\n//     }\n\n//     handleChange = event => {\n//         this.setState({ [event.target.name]: event.target.value });\n//     };\n\n//     handleSubmit = event => {\n//         event.preventDefault();\n//         var that = this;\n\n//         fetch('http://localhost:5000/www/updateUser.php', {\n//         // fetch('http://localhost/backend/updateUser.php', {\n//             method: 'POST',\n//             headers: {\n//             'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({\n//                 UserId: this.state.id,\n//                 FirstName: this.state.firstName,\n//                 LastName: this.state.lastName,\n//                 Email: this.state.email,\n//                 Address: this.state.address,\n//                 City:this.state.city,\n//                 Password: this.state.password,\n//                 PhoneNumber:this.state.phoneNumber,\n//                 TypeAccount: this.state.selectedOption\n//             }) \n//         })\n//         .then( (response) => {\n//             return response.json()\n//         }).then( (data) => {\n//             if(data.status){\n//                 that.setState({...that.state, message: data.message});\n//             }else{\n//                 that.setState({...that.state, message: data.message});\n//             }\n\n//         });\n//     }; \n\n//     onValueChange(event) {\n//       this.setState({\n//         selectedOption: event.target.value\n//       });\n//     }\n\n// render() {\n//     return (\n//         <Container>\n//         <h1>My account</h1>\n//         <form  className=\"myAccountForm\" onSubmit={this.handleSubmit}>\n//             <label className = \"labelMyAccount\" htmlFor=\"firstName\">First Name </label> \n//             <input className = \"inputMyAccount\" type=\"text\" name=\"firstName\" placeholder=\"First Name\" value={this.state.firstName} onChange={this.handleChange} required/>\n//             <br/>\n//             <label className = \"labelMyAccount\" htmlFor=\"lastName\">Last Name </label> \n//             <input className = \"inputMyAccount\" type=\"text\" name=\"lastName\" placeholder=\"Last Name\" value={this.state.lastName} onChange={this.handleChange} required/>\n//             <br/>\n//             <label className = \"labelMyAccount\" htmlFor=\"email\">Email </label> \n//             <input className = \"inputMyAccount\" type=\"text\" name=\"email\" placeholder=\"email\" value={this.state.email} onChange={this.handleChange} required/>\n//             <br/>\n//             <label className = \"labelMyAccount\" htmlFor=\"address\">Address </label> \n//             <input className = \"inputMyAccount\" type=\"text\" name=\"address\" placeholder=\"Address\" value={this.state.address} onChange={this.handleChange} required/>\n//             <br/>\n//             <label className = \"labelMyAccount\" htmlFor=\"city\">City </label> \n//             <input className = \"inputMyAccount\" type=\"text\" name=\"city\" placeholder=\"City\" value={this.state.city} onChange={this.handleChange} required/>\n//             <br/>\n//             <label className = \"labelMyAccount\" htmlFor=\"phoneNumber\">Phone Number </label> \n//             <input className = \"inputMyAccount\" type=\"text\" name=\"phoneNumber\" placeholder=\"Phone Number\" value={this.state.phoneNumber} onChange={this.handleChange} required/>\n//             <br/>\n//             <label className = \"labelMyAccount\" htmlFor=\"password\">Password </label> \n//             <input className = \"inputMyAccount\" type=\"text\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleChange} required/>\n//             <br/>\n//             <label className = \"labelMyAccount\" htmlFor=\"confirmPassword\">Confirm Password </label> \n//             <input className = \"inputMyAccount\" type=\"text\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleChange} required/>\n//             <br/>\n//             <label className = \"labelMyAccount\" htmlFor=\"accountType\">Your account type </label> \n//             <input className = \"inputMyAccount\" type=\"text\" name=\"accountType\" placeholder=\"account\" value={this.state.selectedOption} disabled/>\n//             <br/>\n//             <button type=\"submit\">Update Account</button>\n//             <p>{this.state.message}</p>\n//         </form>\n//         </Container>\n//     );\n//     }\n// }\n\n//    export default MyAccount; \nvar _c;\n$RefreshReg$(_c, \"MyAccount\");","map":{"version":3,"names":["React","Component","Container","MyAccount","url","user_id","useContext","AppContext","firstName","setFirstName","useState","lastName","setLastName","email","setEmail","address","setAddress","city","setCity","password","setPassword","phoneNumber","setPhoneNumber","message","setmMssage","selectedOption","setSelectedOption","selectedProvince","setSelectedProvince","useEffect","sessionStorage","getItem","navigate","fetch","method","headers","body","JSON","stringify","UserId","then","response","json","data","FirstName","LastName","Email","Address","City","Password","PhoneNumber","TypeAccount","Province","catch","handleSubmit","event","preventDefault","that","status","e","target","value"],"sources":["/Users/deboraleite/Documents/Conestoga/2_Term/Web_Technologies/Final project/farm_marketplace/front-end/src/Components/MyAccount.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {Container} from './MyAccountStyle';\n// import '../Styles/createAccount.css';\n\nconst MyAccount = () => {\n\n    const { url, user_id} = useContext(AppContext);\n\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [email, setEmail] = useState('');\n    const [address, setAddress] = useState('');\n    const [city, setCity] = useState('');\n    const [password, setPassword] = useState('');\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [message, setmMssage] = useState('');\n    const [selectedOption, setSelectedOption] = useState('');\n    const [selectedProvince, setSelectedProvince] = useState('');\n\n    useEffect(()=>{\n        if(!sessionStorage.getItem(\"id\")){\n            navigate('/');\n        }\n        fetch(url + 'getUserById.php', {\n                method: 'POST',\n                headers: {\n                'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    UserId: user_id\n                }) \n            })\n            .then( (response) => {\n                return response.json()\n            }).then( (data) => {\n\n                setFirstName(data.FirstName);\n                setLastName(data.LastName);\n                setEmail(data.Email);\n                setAddress(data.Address);\n                setCity(data.City);\n                setPassword(data.Password);\n                setPhoneNumber(data.PhoneNumber);\n                setSelectedOption(data.TypeAccount);\n                setSelectedProvince(data.Province);\n\n            }).catch(() => setmMssage('User not created'));\n        \n        \n    },[user_id]);\n\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        var that = this;\n        \n        fetch(url + 'updateUser.php', {\n    \n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                UserId: user_id,\n                FirstName: firstName,\n                LastName: lastName,\n                Email: email,\n                Address: address,\n                City:city,\n                Password: password,\n                Province: selectedProvince,\n                PhoneNumber: phoneNumber,\n                TypeAccount: selectedOption\n            }) \n        })\n        .then( (response) => {\n            return response.json()\n        }).then( (data) => {\n            if(data.status){\n                setmMssage(data.message);\n            }else{\n                setmMssage(data.message);\n            }\n            \n        });\n    }; \n\n    return (\n        <Container>\n        <h1>My account</h1>\n        <form  className=\"myAccountForm\" onSubmit={handleSubmit}>\n            <label className = \"labelMyAccount\" htmlFor=\"firstName\">First Name </label> \n            <input className = \"inputMyAccount\" type=\"text\" name=\"firstName\" placeholder=\"First Name\" value={firstName} onChange={(e) => setFirstName(e.target.value)} required/>\n            <br/>\n            <label className = \"labelMyAccount\" htmlFor=\"lastName\">Last Name </label> \n            <input className = \"inputMyAccount\" type=\"text\" name=\"lastName\" placeholder=\"Last Name\" value={lastName} onChange={(e) => setLastName(e.target.value)}required/>\n            <br/>\n            <label className = \"labelMyAccount\" htmlFor=\"email\">Email </label> \n            <input className = \"inputMyAccount\" type=\"text\" name=\"email\" placeholder=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required/>\n            <br/>\n            <label className = \"labelMyAccount\" htmlFor=\"address\">Address </label> \n            <input className = \"inputMyAccount\" type=\"text\" name=\"address\" placeholder=\"Address\" value={address} onChange={(e) => setAddress(e.target.value)}required/>\n            <br/>\n            <label className = \"labelMyAccount\" htmlFor=\"city\">City </label> \n            <input className = \"inputMyAccount\" type=\"text\" name=\"city\" placeholder=\"City\" value={city} onChange={(e) => setCity(e.target.value)} required/>\n            <br/>\n            <label className = \"labelMyAccount\" htmlFor=\"city\">Province </label> \n            <input className = \"inputMyAccount\" type=\"text\" name=\"city\" placeholder=\"City\" value={selectedProvince} onChange={(e) => selectedProvince(e.target.value)} required/><br/>\n            <br/>\n            <label className = \"labelMyAccount\" htmlFor=\"phoneNumber\">Phone Number </label> \n            <input className = \"inputMyAccount\" type=\"text\" name=\"phoneNumber\" placeholder=\"Phone Number\" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)}required/>\n            <br/>\n            <label className = \"labelMyAccount\" htmlFor=\"password\">Password </label> \n            <input className = \"inputMyAccount\" type=\"text\" name=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required/>\n            <br/>\n            <label className = \"labelMyAccount\" htmlFor=\"accountType\">Your account type </label> \n            <input className = \"inputMyAccount\" type=\"text\" name=\"accountType\" placeholder=\"account\" value={selectedOption} disabled/>\n            <br/>\n            <button type=\"submit\">Update Account</button>\n            <p>{message}</p>\n        </form>\n        </Container>\n    );\n\n}\n\n   export default MyAccount; \n\n\n\n\n// class MyAccount extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             id: sessionStorage.getItem(\"id\"),\n//             firstName: '',\n//             lastName:'',\n//             email: '',\n//             address:'',\n//             city:'',\n//             password: '',\n//             phoneNumber:'',\n//             message: '',\n//             selectedOption: ''\n//         }; \n//         this.onValueChange = this.onValueChange.bind(this);\n//     }\n\n//     componentDidMount() {\n//         this.getUser();\n//     }\n//     getUser(){\n//         var that = this;\n//         fetch('http://localhost:5000/www/getUserById.php', {\n//         // fetch('http://localhost/backend/getUserById.php', {\n//             method: 'POST',\n//             headers: {\n//             'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({\n//                 UserId: this.state.id\n//             }) \n//         })\n//         .then( (response) => {\n//             return response.json()\n//         }).then( (data) => {\n            \n//             that.setState({\n//                 firstName: data.FirstName,\n//                 lastName: data.LastName,\n//                 email: data.Email,\n//                 address: data.Address,\n//                 city: data.City,\n//                 password: data.Password,\n//                 phoneNumber: data.PhoneNumber,\n//                 selectedOption: data.TypeAccount,\n//             })\n//         }).catch(() => this.setState({...that.state, message: 'User not created'}));\n//     }\n\n//     handleChange = event => {\n//         this.setState({ [event.target.name]: event.target.value });\n//     };\n\n//     handleSubmit = event => {\n//         event.preventDefault();\n//         var that = this;\n        \n//         fetch('http://localhost:5000/www/updateUser.php', {\n//         // fetch('http://localhost/backend/updateUser.php', {\n//             method: 'POST',\n//             headers: {\n//             'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify({\n//                 UserId: this.state.id,\n//                 FirstName: this.state.firstName,\n//                 LastName: this.state.lastName,\n//                 Email: this.state.email,\n//                 Address: this.state.address,\n//                 City:this.state.city,\n//                 Password: this.state.password,\n//                 PhoneNumber:this.state.phoneNumber,\n//                 TypeAccount: this.state.selectedOption\n//             }) \n//         })\n//         .then( (response) => {\n//             return response.json()\n//         }).then( (data) => {\n//             if(data.status){\n//                 that.setState({...that.state, message: data.message});\n//             }else{\n//                 that.setState({...that.state, message: data.message});\n//             }\n            \n//         });\n//     }; \n\n//     onValueChange(event) {\n//       this.setState({\n//         selectedOption: event.target.value\n//       });\n//     }\n\n// render() {\n//     return (\n//         <Container>\n//         <h1>My account</h1>\n//         <form  className=\"myAccountForm\" onSubmit={this.handleSubmit}>\n//             <label className = \"labelMyAccount\" htmlFor=\"firstName\">First Name </label> \n//             <input className = \"inputMyAccount\" type=\"text\" name=\"firstName\" placeholder=\"First Name\" value={this.state.firstName} onChange={this.handleChange} required/>\n//             <br/>\n//             <label className = \"labelMyAccount\" htmlFor=\"lastName\">Last Name </label> \n//             <input className = \"inputMyAccount\" type=\"text\" name=\"lastName\" placeholder=\"Last Name\" value={this.state.lastName} onChange={this.handleChange} required/>\n//             <br/>\n//             <label className = \"labelMyAccount\" htmlFor=\"email\">Email </label> \n//             <input className = \"inputMyAccount\" type=\"text\" name=\"email\" placeholder=\"email\" value={this.state.email} onChange={this.handleChange} required/>\n//             <br/>\n//             <label className = \"labelMyAccount\" htmlFor=\"address\">Address </label> \n//             <input className = \"inputMyAccount\" type=\"text\" name=\"address\" placeholder=\"Address\" value={this.state.address} onChange={this.handleChange} required/>\n//             <br/>\n//             <label className = \"labelMyAccount\" htmlFor=\"city\">City </label> \n//             <input className = \"inputMyAccount\" type=\"text\" name=\"city\" placeholder=\"City\" value={this.state.city} onChange={this.handleChange} required/>\n//             <br/>\n//             <label className = \"labelMyAccount\" htmlFor=\"phoneNumber\">Phone Number </label> \n//             <input className = \"inputMyAccount\" type=\"text\" name=\"phoneNumber\" placeholder=\"Phone Number\" value={this.state.phoneNumber} onChange={this.handleChange} required/>\n//             <br/>\n//             <label className = \"labelMyAccount\" htmlFor=\"password\">Password </label> \n//             <input className = \"inputMyAccount\" type=\"text\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleChange} required/>\n//             <br/>\n//             <label className = \"labelMyAccount\" htmlFor=\"confirmPassword\">Confirm Password </label> \n//             <input className = \"inputMyAccount\" type=\"text\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.handleChange} required/>\n//             <br/>\n//             <label className = \"labelMyAccount\" htmlFor=\"accountType\">Your account type </label> \n//             <input className = \"inputMyAccount\" type=\"text\" name=\"accountType\" placeholder=\"account\" value={this.state.selectedOption} disabled/>\n//             <br/>\n//             <button type=\"submit\">Update Account</button>\n//             <p>{this.state.message}</p>\n//         </form>\n//         </Container>\n//     );\n//     }\n// }\n\n//    export default MyAccount; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}